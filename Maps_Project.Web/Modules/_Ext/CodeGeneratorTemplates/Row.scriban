{{USING "Serenity.ComponentModel"}}
{{USING "Serenity.Data"}}
{{USING "Serenity.Data.Mapping"}}
{{USING "System.ComponentModel"}}

{{NAMESPACE ModuleNamespace}}{{capture block~}}
[ConnectionKey("{{ConnectionKey}}"){{if Module}}, Module("{{Module}}"){{end}}, TableName("{{SchemaAndTable}}")]
[DisplayName("{{Title}}"), InstanceName("{{Title}}")]
[NavigationPermission("{{Module}}:{{ClassName}}:Navigation")]
[ReadPermission("{{Module}}:{{ClassName}}:Read")]
[InsertPermission("{{Module}}:{{ClassName}}:Insert")]
[UpdatePermission("{{Module}}:{{ClassName}}:Update")]
[DeletePermission("{{Module}}:{{ClassName}}:Delete")]
public sealed{{if EnableRowTemplates}} partial{{end}} class {{RowClassName}} : {{TYPEREFLIST RowBaseClassAndInterfaceList}}
{   {{~if DeclareJoinConstants && !Joins.empty?~}}

    {{~for j in Joins~}}
    const string {{j.Alias}} = nameof({{j.Alias}});
    {{~end~}}
    {{~end~}}
    {{~if EnableRowTemplates~}}

    class RowTemplate
    {   {{~for x in AllFields~}}

        [{{ATTRREF x.AttributeList}}]
        public {{TYPEREF x.PropertyType}} {{x.PropertyName}} { get; set; }
        {{~end~}}
    }
    {{~if FieldsBaseClass != "Serenity.Data.RowFieldsBase"~}}

    public partial class RowFields : {{TYPEREF FieldsBaseClass}}
    {
    }
    {{~end~}}
    {{~else~}}
    {{~for x in Fields}}
    [{{ATTRREF x.AttributeList}}]
    public {{TYPEREF x.PropertyType}} {{x.Ident}} { get => fields.{{x.Ident}}[this]; set => fields.{{x.Ident}}[this] = value; }
    public partial class RowFields { public {{x.FieldType}}Field {{x.Ident}}; }
    {{end}}
    #region Foreign Fields
    {{~for j in Joins}}{{~for k in j.Fields}}
    [{{ATTRREF k.AttributeList}}, ReadOnly(true)]
    public {{TYPEREF k.PropertyType}} {{k.Ident}} { get => fields.{{k.Ident}}[this]; set => fields.{{k.Ident}}[this] = value; }
    public partial class RowFields { public {{k.FieldType}}Field {{k.Ident}}; }
    {{~end}}{{~end}}
    #endregion Foreign Fields

    public partial class RowFields : {{TYPEREF FieldsBaseClass}} { }
    {{~end~}}
}
{{~end}}{{NAMESPACEBLOCK block~}}